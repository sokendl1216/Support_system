{
  "web_static": {
    "name": "静的Webサイト",
    "description": "基本的な静的Webサイトテンプレート",
    "html": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"description\" content=\"{description}\">\n    <title>{title}</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <header class=\"header\">\n        <nav class=\"navigation\">\n            <div class=\"nav-container\">\n                <div class=\"logo\">\n                    <h1>Website Title</h1>\n                </div>\n                <ul class=\"nav-menu\">\n                    <li><a href=\"#home\">ホーム</a></li>\n                    <li><a href=\"#about\">概要</a></li>\n                    <li><a href=\"#services\">サービス</a></li>\n                    <li><a href=\"#contact\">お問い合わせ</a></li>\n                </ul>\n            </div>\n        </nav>\n    </header>\n\n    <main class=\"main\">\n        <section id=\"home\" class=\"hero\">\n            <div class=\"hero-content\">\n                <h2>Welcome to Our Website</h2>\n                <p>{description}</p>\n                <button class=\"cta-button\">Get Started</button>\n            </div>\n        </section>\n\n        <section id=\"about\" class=\"about\">\n            <div class=\"container\">\n                <h2>About Us</h2>\n                <p>ここに会社や サービスの説明を記載します。</p>\n            </div>\n        </section>\n\n        <section id=\"services\" class=\"services\">\n            <div class=\"container\">\n                <h2>Our Services</h2>\n                <div class=\"services-grid\">\n                    <div class=\"service-card\">\n                        <h3>Service 1</h3>\n                        <p>サービス1の説明</p>\n                    </div>\n                    <div class=\"service-card\">\n                        <h3>Service 2</h3>\n                        <p>サービス2の説明</p>\n                    </div>\n                    <div class=\"service-card\">\n                        <h3>Service 3</h3>\n                        <p>サービス3の説明</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section id=\"contact\" class=\"contact\">\n            <div class=\"container\">\n                <h2>Contact Us</h2>\n                <form class=\"contact-form\">\n                    <input type=\"text\" placeholder=\"お名前\" required>\n                    <input type=\"email\" placeholder=\"メールアドレス\" required>\n                    <textarea placeholder=\"メッセージ\" required></textarea>\n                    <button type=\"submit\">送信</button>\n                </form>\n            </div>\n        </section>\n    </main>\n\n    <footer class=\"footer\">\n        <div class=\"container\">\n            <p>&copy; 2024 Website Title. All rights reserved.</p>\n        </div>\n    </footer>\n\n    <script src=\"script.js\"></script>\n</body>\n</html>",
    "css": "/* Reset and Base Styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Arial', sans-serif;\n    line-height: 1.6;\n    color: #333;\n    background-color: #fff;\n}\n\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 20px;\n}\n\n/* Header Styles */\n.header {\n    background-color: #2c3e50;\n    color: white;\n    padding: 1rem 0;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index: 1000;\n    box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n}\n\n.nav-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 20px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.logo h1 {\n    font-size: 1.5rem;\n    font-weight: bold;\n}\n\n.nav-menu {\n    display: flex;\n    list-style: none;\n    gap: 2rem;\n}\n\n.nav-menu a {\n    color: white;\n    text-decoration: none;\n    padding: 0.5rem 1rem;\n    border-radius: 4px;\n    transition: background-color 0.3s;\n}\n\n.nav-menu a:hover {\n    background-color: #34495e;\n}\n\n/* Main Content */\n.main {\n    margin-top: 80px;\n}\n\n/* Hero Section */\n.hero {\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n    padding: 100px 0;\n    text-align: center;\n}\n\n.hero-content h2 {\n    font-size: 3rem;\n    margin-bottom: 1rem;\n}\n\n.hero-content p {\n    font-size: 1.2rem;\n    margin-bottom: 2rem;\n    max-width: 600px;\n    margin-left: auto;\n    margin-right: auto;\n}\n\n.cta-button {\n    background-color: #e74c3c;\n    color: white;\n    padding: 12px 30px;\n    border: none;\n    border-radius: 5px;\n    font-size: 1.1rem;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n.cta-button:hover {\n    background-color: #c0392b;\n}\n\n/* Sections */\n.about, .services, .contact {\n    padding: 80px 0;\n}\n\n.about {\n    background-color: #f8f9fa;\n}\n\n.services {\n    background-color: white;\n}\n\n.contact {\n    background-color: #f8f9fa;\n}\n\nsection h2 {\n    text-align: center;\n    font-size: 2.5rem;\n    margin-bottom: 3rem;\n    color: #2c3e50;\n}\n\n/* Services Grid */\n.services-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 2rem;\n    margin-top: 2rem;\n}\n\n.service-card {\n    background: white;\n    padding: 2rem;\n    border-radius: 8px;\n    box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    text-align: center;\n    transition: transform 0.3s;\n}\n\n.service-card:hover {\n    transform: translateY(-5px);\n}\n\n.service-card h3 {\n    color: #2c3e50;\n    margin-bottom: 1rem;\n}\n\n/* Contact Form */\n.contact-form {\n    max-width: 600px;\n    margin: 0 auto;\n    display: grid;\n    gap: 1rem;\n}\n\n.contact-form input,\n.contact-form textarea {\n    padding: 12px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 1rem;\n}\n\n.contact-form textarea {\n    height: 120px;\n    resize: vertical;\n}\n\n.contact-form button {\n    background-color: #3498db;\n    color: white;\n    padding: 12px;\n    border: none;\n    border-radius: 4px;\n    font-size: 1.1rem;\n    cursor: pointer;\n    transition: background-color 0.3s;\n}\n\n.contact-form button:hover {\n    background-color: #2980b9;\n}\n\n/* Footer */\n.footer {\n    background-color: #2c3e50;\n    color: white;\n    text-align: center;\n    padding: 2rem 0;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n    .nav-container {\n        flex-direction: column;\n        gap: 1rem;\n    }\n    \n    .nav-menu {\n        flex-direction: column;\n        gap: 0.5rem;\n        text-align: center;\n    }\n    \n    .hero-content h2 {\n        font-size: 2rem;\n    }\n    \n    .services-grid {\n        grid-template-columns: 1fr;\n    }\n}",
    "javascript": "/**\n * {description}\n * 静的Webサイト用JavaScript\n */\n\n// DOM Content Loaded Event\ndocument.addEventListener('DOMContentLoaded', function() {\n    console.log('Website loaded successfully');\n    \n    // 初期化処理\n    initializeWebsite();\n});\n\n/**\n * ウェブサイト初期化\n */\nfunction initializeWebsite() {\n    setupNavigation();\n    setupContactForm();\n    setupScrollEffects();\n}\n\n/**\n * ナビゲーション設定\n */\nfunction setupNavigation() {\n    const navLinks = document.querySelectorAll('.nav-menu a');\n    \n    navLinks.forEach(link => {\n        link.addEventListener('click', function(e) {\n            e.preventDefault();\n            \n            const targetId = this.getAttribute('href').substring(1);\n            const targetSection = document.getElementById(targetId);\n            \n            if (targetSection) {\n                targetSection.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'start'\n                });\n            }\n        });\n    });\n}\n\n/**\n * お問い合わせフォーム設定\n */\nfunction setupContactForm() {\n    const contactForm = document.querySelector('.contact-form');\n    \n    if (contactForm) {\n        contactForm.addEventListener('submit', function(e) {\n            e.preventDefault();\n            handleFormSubmission(this);\n        });\n    }\n}\n\n/**\n * フォーム送信処理\n */\nfunction handleFormSubmission(form) {\n    // フォームデータの取得\n    const formData = new FormData(form);\n    const name = form.querySelector('input[type=\"text\"]').value;\n    const email = form.querySelector('input[type=\"email\"]').value;\n    const message = form.querySelector('textarea').value;\n    \n    // バリデーション\n    if (!name || !email || !message) {\n        showMessage('すべての項目を入力してください。', 'error');\n        return;\n    }\n    \n    if (!isValidEmail(email)) {\n        showMessage('有効なメールアドレスを入力してください。', 'error');\n        return;\n    }\n    \n    // ここで実際の送信処理を行う\n    // 現在はデモ用の処理\n    console.log('Form submitted:', { name, email, message });\n    \n    showMessage('お問い合わせありがとうございます。後ほどご連絡いたします。', 'success');\n    form.reset();\n}\n\n/**\n * メールアドレス検証\n */\nfunction isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n}\n\n/**\n * メッセージ表示\n */\nfunction showMessage(message, type = 'info') {\n    // 既存のメッセージを削除\n    const existingMessage = document.querySelector('.form-message');\n    if (existingMessage) {\n        existingMessage.remove();\n    }\n    \n    // 新しいメッセージを作成\n    const messageElement = document.createElement('div');\n    messageElement.className = `form-message form-message-${type}`;\n    messageElement.textContent = message;\n    \n    // スタイルを適用\n    messageElement.style.cssText = `\n        padding: 12px;\n        margin: 10px 0;\n        border-radius: 4px;\n        font-weight: bold;\n        ${type === 'success' ? 'background-color: #d4edda; color: #155724; border: 1px solid #c3e6cb;' : ''}\n        ${type === 'error' ? 'background-color: #f8d7da; color: #721c24; border: 1px solid #f5c6cb;' : ''}\n        ${type === 'info' ? 'background-color: #d1ecf1; color: #0c5460; border: 1px solid #bee5eb;' : ''}\n    `;\n    \n    // フォームの後に挿入\n    const contactForm = document.querySelector('.contact-form');\n    if (contactForm) {\n        contactForm.appendChild(messageElement);\n        \n        // 5秒後に自動削除\n        setTimeout(() => {\n            if (messageElement.parentNode) {\n                messageElement.remove();\n            }\n        }, 5000);\n    }\n}\n\n/**\n * スクロールエフェクト設定\n */\nfunction setupScrollEffects() {\n    // ヘッダーのスクロール効果\n    window.addEventListener('scroll', function() {\n        const header = document.querySelector('.header');\n        if (window.scrollY > 100) {\n            header.style.backgroundColor = 'rgba(44, 62, 80, 0.95)';\n        } else {\n            header.style.backgroundColor = '#2c3e50';\n        }\n    });\n    \n    // CTA ボタンのクリックイベント\n    const ctaButton = document.querySelector('.cta-button');\n    if (ctaButton) {\n        ctaButton.addEventListener('click', function() {\n            const contactSection = document.getElementById('contact');\n            if (contactSection) {\n                contactSection.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'start'\n                });\n            }\n        });\n    }\n}\n\n// ユーティリティ関数\nconst utils = {\n    // 要素が表示領域に入ったかチェック\n    isElementInViewport: function(element) {\n        const rect = element.getBoundingClientRect();\n        return (\n            rect.top >= 0 &&\n            rect.left >= 0 &&\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    },\n    \n    // デバウンス関数\n    debounce: function(func, wait) {\n        let timeout;\n        return function executedFunction(...args) {\n            const later = () => {\n                clearTimeout(timeout);\n                func(...args);\n            };\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n        };\n    }\n};\n\n// グローバルに公開\nwindow.WebsiteUtils = utils;",
    "variables": ["description", "title"],
    "files": ["index.html", "styles.css", "script.js"]
  },
  "web_landing": {
    "name": "ランディングページ",
    "description": "コンバージョンに最適化されたランディングページ",
    "html": "<!DOCTYPE html>\n<html lang=\"ja\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <meta name=\"description\" content=\"{description}\">\n    <title>{title}</title>\n    <link rel=\"stylesheet\" href=\"styles.css\">\n</head>\n<body>\n    <header class=\"header\">\n        <div class=\"container\">\n            <div class=\"logo\">\n                <h1>Brand Name</h1>\n            </div>\n            <nav class=\"nav\">\n                <a href=\"#features\">Features</a>\n                <a href=\"#pricing\">Pricing</a>\n                <a href=\"#contact\" class=\"cta-nav\">Get Started</a>\n            </nav>\n        </div>\n    </header>\n\n    <main>\n        <section class=\"hero\">\n            <div class=\"container\">\n                <div class=\"hero-content\">\n                    <h1 class=\"hero-title\">{title}</h1>\n                    <p class=\"hero-subtitle\">{description}</p>\n                    <div class=\"hero-cta\">\n                        <button class=\"btn-primary\">Start Free Trial</button>\n                        <button class=\"btn-secondary\">Learn More</button>\n                    </div>\n                </div>\n                <div class=\"hero-image\">\n                    <div class=\"placeholder-image\">Product Demo</div>\n                </div>\n            </div>\n        </section>\n\n        <section id=\"features\" class=\"features\">\n            <div class=\"container\">\n                <h2>Why Choose Us?</h2>\n                <div class=\"features-grid\">\n                    <div class=\"feature\">\n                        <div class=\"feature-icon\">🚀</div>\n                        <h3>Fast Performance</h3>\n                        <p>Lightning-fast performance that will boost your productivity.</p>\n                    </div>\n                    <div class=\"feature\">\n                        <div class=\"feature-icon\">🔒</div>\n                        <h3>Secure & Reliable</h3>\n                        <p>Enterprise-grade security to protect your data.</p>\n                    </div>\n                    <div class=\"feature\">\n                        <div class=\"feature-icon\">📱</div>\n                        <h3>Mobile Friendly</h3>\n                        <p>Works seamlessly across all devices and platforms.</p>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section id=\"pricing\" class=\"pricing\">\n            <div class=\"container\">\n                <h2>Choose Your Plan</h2>\n                <div class=\"pricing-grid\">\n                    <div class=\"pricing-card\">\n                        <h3>Basic</h3>\n                        <div class=\"price\">¥999<span>/month</span></div>\n                        <ul class=\"features-list\">\n                            <li>Feature 1</li>\n                            <li>Feature 2</li>\n                            <li>Feature 3</li>\n                        </ul>\n                        <button class=\"btn-outline\">Choose Plan</button>\n                    </div>\n                    <div class=\"pricing-card featured\">\n                        <div class=\"badge\">Most Popular</div>\n                        <h3>Pro</h3>\n                        <div class=\"price\">¥1,999<span>/month</span></div>\n                        <ul class=\"features-list\">\n                            <li>All Basic features</li>\n                            <li>Advanced Feature 1</li>\n                            <li>Advanced Feature 2</li>\n                            <li>Priority Support</li>\n                        </ul>\n                        <button class=\"btn-primary\">Choose Plan</button>\n                    </div>\n                    <div class=\"pricing-card\">\n                        <h3>Enterprise</h3>\n                        <div class=\"price\">¥4,999<span>/month</span></div>\n                        <ul class=\"features-list\">\n                            <li>All Pro features</li>\n                            <li>Custom Integration</li>\n                            <li>Dedicated Support</li>\n                            <li>SLA Guarantee</li>\n                        </ul>\n                        <button class=\"btn-outline\">Contact Sales</button>\n                    </div>\n                </div>\n            </div>\n        </section>\n\n        <section id=\"contact\" class=\"contact\">\n            <div class=\"container\">\n                <div class=\"contact-content\">\n                    <h2>Ready to Get Started?</h2>\n                    <p>Join thousands of satisfied customers today.</p>\n                    <form class=\"contact-form\">\n                        <input type=\"text\" placeholder=\"Your Name\" required>\n                        <input type=\"email\" placeholder=\"Your Email\" required>\n                        <input type=\"text\" placeholder=\"Company Name\">\n                        <button type=\"submit\" class=\"btn-primary\">Start Free Trial</button>\n                    </form>\n                    <p class=\"form-note\">No credit card required. Cancel anytime.</p>\n                </div>\n            </div>\n        </section>\n    </main>\n\n    <footer class=\"footer\">\n        <div class=\"container\">\n            <p>&copy; 2024 Brand Name. All rights reserved.</p>\n        </div>\n    </footer>\n\n    <script src=\"script.js\"></script>\n</body>\n</html>",
    "css": "/* Landing Page Styles */\n* {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n}\n\nbody {\n    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;\n    line-height: 1.6;\n    color: #333;\n}\n\n.container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 0 20px;\n}\n\n/* Header */\n.header {\n    background: white;\n    border-bottom: 1px solid #eee;\n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index: 1000;\n}\n\n.header .container {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem 20px;\n}\n\n.logo h1 {\n    color: #6366f1;\n    font-size: 1.5rem;\n    font-weight: 700;\n}\n\n.nav {\n    display: flex;\n    gap: 2rem;\n    align-items: center;\n}\n\n.nav a {\n    text-decoration: none;\n    color: #374151;\n    font-weight: 500;\n    transition: color 0.3s;\n}\n\n.nav a:hover {\n    color: #6366f1;\n}\n\n.cta-nav {\n    background: #6366f1;\n    color: white !important;\n    padding: 0.5rem 1rem;\n    border-radius: 6px;\n    transition: background 0.3s;\n}\n\n.cta-nav:hover {\n    background: #4f46e5 !important;\n}\n\n/* Hero Section */\n.hero {\n    padding: 120px 0 80px;\n    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n    color: white;\n}\n\n.hero .container {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 4rem;\n    align-items: center;\n}\n\n.hero-title {\n    font-size: 3.5rem;\n    font-weight: 700;\n    margin-bottom: 1.5rem;\n    line-height: 1.2;\n}\n\n.hero-subtitle {\n    font-size: 1.25rem;\n    margin-bottom: 2rem;\n    opacity: 0.9;\n}\n\n.hero-cta {\n    display: flex;\n    gap: 1rem;\n}\n\n.btn-primary {\n    background: #ef4444;\n    color: white;\n    border: none;\n    padding: 12px 24px;\n    border-radius: 6px;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s;\n}\n\n.btn-primary:hover {\n    background: #dc2626;\n    transform: translateY(-2px);\n}\n\n.btn-secondary {\n    background: transparent;\n    color: white;\n    border: 2px solid white;\n    padding: 10px 24px;\n    border-radius: 6px;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s;\n}\n\n.btn-secondary:hover {\n    background: white;\n    color: #6366f1;\n}\n\n.placeholder-image {\n    background: rgba(255, 255, 255, 0.1);\n    border: 2px dashed rgba(255, 255, 255, 0.3);\n    border-radius: 12px;\n    height: 300px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.2rem;\n    color: rgba(255, 255, 255, 0.8);\n}\n\n/* Features Section */\n.features {\n    padding: 80px 0;\n    background: #f9fafb;\n}\n\n.features h2 {\n    text-align: center;\n    font-size: 2.5rem;\n    margin-bottom: 3rem;\n    color: #1f2937;\n}\n\n.features-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 2rem;\n}\n\n.feature {\n    text-align: center;\n    padding: 2rem;\n    background: white;\n    border-radius: 12px;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);\n}\n\n.feature-icon {\n    font-size: 3rem;\n    margin-bottom: 1rem;\n}\n\n.feature h3 {\n    font-size: 1.25rem;\n    margin-bottom: 1rem;\n    color: #1f2937;\n}\n\n/* Pricing Section */\n.pricing {\n    padding: 80px 0;\n    background: white;\n}\n\n.pricing h2 {\n    text-align: center;\n    font-size: 2.5rem;\n    margin-bottom: 3rem;\n    color: #1f2937;\n}\n\n.pricing-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 2rem;\n    max-width: 900px;\n    margin: 0 auto;\n}\n\n.pricing-card {\n    background: white;\n    border: 2px solid #e5e7eb;\n    border-radius: 12px;\n    padding: 2rem;\n    text-align: center;\n    position: relative;\n    transition: all 0.3s;\n}\n\n.pricing-card:hover {\n    border-color: #6366f1;\n    transform: translateY(-5px);\n}\n\n.pricing-card.featured {\n    border-color: #6366f1;\n    transform: scale(1.05);\n}\n\n.badge {\n    position: absolute;\n    top: -10px;\n    left: 50%;\n    transform: translateX(-50%);\n    background: #6366f1;\n    color: white;\n    padding: 0.5rem 1rem;\n    border-radius: 20px;\n    font-size: 0.875rem;\n    font-weight: 600;\n}\n\n.pricing-card h3 {\n    font-size: 1.5rem;\n    margin-bottom: 1rem;\n    color: #1f2937;\n}\n\n.price {\n    font-size: 3rem;\n    font-weight: 700;\n    color: #6366f1;\n    margin-bottom: 1.5rem;\n}\n\n.price span {\n    font-size: 1rem;\n    color: #6b7280;\n    font-weight: 400;\n}\n\n.features-list {\n    list-style: none;\n    margin-bottom: 2rem;\n}\n\n.features-list li {\n    padding: 0.5rem 0;\n    border-bottom: 1px solid #f3f4f6;\n}\n\n.btn-outline {\n    background: transparent;\n    color: #6366f1;\n    border: 2px solid #6366f1;\n    padding: 12px 24px;\n    border-radius: 6px;\n    font-size: 1rem;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.3s;\n    width: 100%;\n}\n\n.btn-outline:hover {\n    background: #6366f1;\n    color: white;\n}\n\n/* Contact Section */\n.contact {\n    padding: 80px 0;\n    background: #1f2937;\n    color: white;\n    text-align: center;\n}\n\n.contact h2 {\n    font-size: 2.5rem;\n    margin-bottom: 1rem;\n}\n\n.contact p {\n    font-size: 1.25rem;\n    margin-bottom: 2rem;\n    opacity: 0.8;\n}\n\n.contact-form {\n    max-width: 500px;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n}\n\n.contact-form input {\n    padding: 12px;\n    border: none;\n    border-radius: 6px;\n    font-size: 1rem;\n}\n\n.contact-form .btn-primary {\n    width: 100%;\n}\n\n.form-note {\n    margin-top: 1rem;\n    font-size: 0.875rem;\n    opacity: 0.7;\n}\n\n/* Footer */\n.footer {\n    background: #111827;\n    color: white;\n    text-align: center;\n    padding: 2rem 0;\n}\n\n/* Responsive Design */\n@media (max-width: 768px) {\n    .header .container {\n        flex-direction: column;\n        gap: 1rem;\n    }\n    \n    .hero .container {\n        grid-template-columns: 1fr;\n        text-align: center;\n    }\n    \n    .hero-title {\n        font-size: 2.5rem;\n    }\n    \n    .hero-cta {\n        flex-direction: column;\n        align-items: center;\n    }\n    \n    .pricing-card.featured {\n        transform: none;\n    }\n}",
    "javascript": "/**\n * {description}\n * ランディングページ用JavaScript\n */\n\n// グローバル設定\nconst CONFIG = {\n    animationDuration: 300,\n    scrollOffset: 80\n};\n\n// DOM Content Loaded\ndocument.addEventListener('DOMContentLoaded', function() {\n    initializeLandingPage();\n});\n\n/**\n * ランディングページ初期化\n */\nfunction initializeLandingPage() {\n    setupSmoothScrolling();\n    setupContactForm();\n    setupPricingCards();\n    setupScrollAnimations();\n    setupCTAButtons();\n}\n\n/**\n * スムーススクロール設定\n */\nfunction setupSmoothScrolling() {\n    const navLinks = document.querySelectorAll('.nav a[href^=\"#\"]');\n    \n    navLinks.forEach(link => {\n        link.addEventListener('click', function(e) {\n            e.preventDefault();\n            \n            const targetId = this.getAttribute('href').substring(1);\n            const targetElement = document.getElementById(targetId);\n            \n            if (targetElement) {\n                const offsetTop = targetElement.offsetTop - CONFIG.scrollOffset;\n                \n                window.scrollTo({\n                    top: offsetTop,\n                    behavior: 'smooth'\n                });\n            }\n        });\n    });\n}\n\n/**\n * お問い合わせフォーム設定\n */\nfunction setupContactForm() {\n    const contactForm = document.querySelector('.contact-form');\n    \n    if (contactForm) {\n        contactForm.addEventListener('submit', function(e) {\n            e.preventDefault();\n            handleContactFormSubmission(this);\n        });\n    }\n}\n\n/**\n * お問い合わせフォーム送信処理\n */\nfunction handleContactFormSubmission(form) {\n    const formData = {\n        name: form.querySelector('input[type=\"text\"]').value,\n        email: form.querySelector('input[type=\"email\"]').value,\n        company: form.querySelectorAll('input[type=\"text\"]')[1]?.value || ''\n    };\n    \n    // バリデーション\n    if (!formData.name || !formData.email) {\n        showNotification('お名前とメールアドレスは必須項目です。', 'error');\n        return;\n    }\n    \n    if (!isValidEmail(formData.email)) {\n        showNotification('有効なメールアドレスを入力してください。', 'error');\n        return;\n    }\n    \n    // 送信処理のシミュレーション\n    const submitButton = form.querySelector('button[type=\"submit\"]');\n    const originalText = submitButton.textContent;\n    \n    submitButton.textContent = 'Sending...';\n    submitButton.disabled = true;\n    \n    // 実際の送信処理をここに実装\n    setTimeout(() => {\n        console.log('Contact form submitted:', formData);\n        \n        showNotification('ありがとうございます！お申し込みを受け付けました。', 'success');\n        form.reset();\n        \n        submitButton.textContent = originalText;\n        submitButton.disabled = false;\n        \n        // コンバージョントラッキング\n        trackConversion('contact_form_submission', formData);\n    }, 1500);\n}\n\n/**\n * 料金カード設定\n */\nfunction setupPricingCards() {\n    const pricingCards = document.querySelectorAll('.pricing-card');\n    \n    pricingCards.forEach(card => {\n        const button = card.querySelector('button');\n        \n        if (button) {\n            button.addEventListener('click', function() {\n                const planName = card.querySelector('h3').textContent;\n                handlePlanSelection(planName, card);\n            });\n        }\n    });\n}\n\n/**\n * プラン選択処理\n */\nfunction handlePlanSelection(planName, cardElement) {\n    console.log('Plan selected:', planName);\n    \n    // ビジュアルフィードバック\n    cardElement.style.transform = 'scale(0.95)';\n    setTimeout(() => {\n        cardElement.style.transform = '';\n    }, 150);\n    \n    // プラン選択の処理\n    if (planName === 'Enterprise') {\n        // 営業担当への連絡フォームを表示\n        showSalesContactModal();\n    } else {\n        // 通常の申し込みフローへ\n        redirectToSignup(planName);\n    }\n    \n    // コンバージョントラッキング\n    trackConversion('plan_selection', { plan: planName });\n}\n\n/**\n * CTA ボタン設定\n */\nfunction setupCTAButtons() {\n    const ctaButtons = document.querySelectorAll('.btn-primary, .btn-secondary');\n    \n    ctaButtons.forEach(button => {\n        button.addEventListener('click', function(e) {\n            const buttonText = this.textContent.trim();\n            \n            // ボタンの種類に応じた処理\n            switch(buttonText) {\n                case 'Start Free Trial':\n                    handleFreeTrialClick();\n                    break;\n                case 'Learn More':\n                    scrollToFeatures();\n                    break;\n                default:\n                    console.log('CTA clicked:', buttonText);\n            }\n            \n            // ボタンアニメーション\n            animateButton(this);\n        });\n    });\n}\n\n/**\n * 無料トライアル開始処理\n */\nfunction handleFreeTrialClick() {\n    // お問い合わせセクションへスクロール\n    const contactSection = document.getElementById('contact');\n    if (contactSection) {\n        contactSection.scrollIntoView({ behavior: 'smooth' });\n    }\n    \n    trackConversion('free_trial_click');\n}\n\n/**\n * 機能セクションへスクロール\n */\nfunction scrollToFeatures() {\n    const featuresSection = document.getElementById('features');\n    if (featuresSection) {\n        featuresSection.scrollIntoView({ behavior: 'smooth' });\n    }\n}\n\n/**\n * スクロールアニメーション設定\n */\nfunction setupScrollAnimations() {\n    const observerOptions = {\n        threshold: 0.1,\n        rootMargin: '0px 0px -50px 0px'\n    };\n    \n    const observer = new IntersectionObserver((entries) => {\n        entries.forEach(entry => {\n            if (entry.isIntersecting) {\n                entry.target.classList.add('animate-in');\n            }\n        });\n    }, observerOptions);\n    \n    // アニメーション対象要素を監視\n    const animateElements = document.querySelectorAll('.feature, .pricing-card');\n    animateElements.forEach(el => {\n        el.style.opacity = '0';\n        el.style.transform = 'translateY(30px)';\n        el.style.transition = 'opacity 0.6s ease, transform 0.6s ease';\n        observer.observe(el);\n    });\n    \n    // アニメーション用CSS\n    const style = document.createElement('style');\n    style.textContent = `\n        .animate-in {\n            opacity: 1 !important;\n            transform: translateY(0) !important;\n        }\n    `;\n    document.head.appendChild(style);\n}\n\n/**\n * ボタンアニメーション\n */\nfunction animateButton(button) {\n    button.style.transform = 'scale(0.95)';\n    setTimeout(() => {\n        button.style.transform = '';\n    }, 150);\n}\n\n/**\n * 通知表示\n */\nfunction showNotification(message, type = 'info') {\n    // 既存の通知を削除\n    const existingNotification = document.querySelector('.notification');\n    if (existingNotification) {\n        existingNotification.remove();\n    }\n    \n    const notification = document.createElement('div');\n    notification.className = `notification notification-${type}`;\n    notification.textContent = message;\n    \n    notification.style.cssText = `\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        padding: 16px 24px;\n        border-radius: 6px;\n        color: white;\n        font-weight: 600;\n        z-index: 10000;\n        animation: slideIn 0.3s ease;\n        max-width: 400px;\n        ${type === 'success' ? 'background: #10b981;' : ''}\n        ${type === 'error' ? 'background: #ef4444;' : ''}\n        ${type === 'info' ? 'background: #3b82f6;' : ''}\n    `;\n    \n    document.body.appendChild(notification);\n    \n    // 自動削除\n    setTimeout(() => {\n        notification.style.animation = 'slideOut 0.3s ease';\n        setTimeout(() => {\n            if (notification.parentNode) {\n                notification.remove();\n            }\n        }, 300);\n    }, 5000);\n}\n\n/**\n * メールアドレス検証\n */\nfunction isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n}\n\n/**\n * コンバージョントラッキング\n */\nfunction trackConversion(eventName, data = {}) {\n    console.log('Conversion tracked:', eventName, data);\n    \n    // Google Analytics や他の分析ツールとの連携をここに実装\n    if (typeof gtag !== 'undefined') {\n        gtag('event', eventName, {\n            event_category: 'conversion',\n            ...data\n        });\n    }\n}\n\n/**\n * 営業担当連絡モーダル表示\n */\nfunction showSalesContactModal() {\n    alert('営業担当よりご連絡いたします。お問い合わせフォームにご記入ください。');\n    const contactSection = document.getElementById('contact');\n    if (contactSection) {\n        contactSection.scrollIntoView({ behavior: 'smooth' });\n    }\n}\n\n/**\n * サインアップページへリダイレクト\n */\nfunction redirectToSignup(planName) {\n    console.log('Redirecting to signup with plan:', planName);\n    // 実際のサインアップページへのリダイレクト処理をここに実装\n    alert(`${planName} プランを選択しました。サインアップページに移動します。`);\n}\n\n// アニメーションキーフレームを追加\nconst animationStyles = document.createElement('style');\nanimationStyles.textContent = `\n    @keyframes slideIn {\n        from {\n            transform: translateX(100%);\n            opacity: 0;\n        }\n        to {\n            transform: translateX(0);\n            opacity: 1;\n        }\n    }\n    \n    @keyframes slideOut {\n        from {\n            transform: translateX(0);\n            opacity: 1;\n        }\n        to {\n            transform: translateX(100%);\n            opacity: 0;\n        }\n    }\n`;\ndocument.head.appendChild(animationStyles);\n\n// グローバルに公開\nwindow.LandingPage = {\n    trackConversion,\n    showNotification,\n    handlePlanSelection\n};",
    "variables": ["description", "title"],
    "files": ["index.html", "styles.css", "script.js"]
  }
}
